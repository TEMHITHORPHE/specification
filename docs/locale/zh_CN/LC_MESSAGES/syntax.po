# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2019, sCrypt Inc
# This file is distributed under the same license as the sCrypt package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# qtom zheng <zhfnjust@qq.com>, 2022
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: sCrypt\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-26 22:14+0800\n"
"PO-Revision-Date: 2021-10-07 06:10+0000\n"
"Last-Translator: qtom zheng <zhfnjust@qq.com>, 2022\n"
"Language-Team: Chinese (China) (https://www.transifex.com/scrypt-1/teams/121283/zh_CN/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: zh_CN\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../syntax.rst:3 d68751d64c804beea4ae9e3744c973af
msgid "Syntax Specification"
msgstr "语法规范"

#: ../../syntax.rst:6 2dc32862023b46689928a46ac2577c48
msgid "Formal Specification"
msgstr "形式规范"

#: ../../syntax.rst:7 d63ed4179d1a4d3db1ec6e30eea466e3
msgid ""
"\\begin{align*}\n"
"program &::= [importDirective]^*\\ [contract]^+\\\\\n"
"importDirective &::= \\mathrm{import}\\ \"\\mathrm{ID}\";\\\\\n"
"contract &::= \\mathrm{contract}\\ \\mathrm{ID}\\ \\{\\ [var]^*\\ [constructor]\\ [function]^+\\ \\}\\\\\n"
"var &::= formal;\\\\\n"
"formal &::= \\mathrm{TYPE}\\ \\mathrm{ID}\\\\\n"
"constructor &::= \\mathrm{constructor}([formal[,\\ formal]^*])\\ \\{\\ [stmt]^*\\ \\}\\\\\n"
"function &::= \\mathrm{[public|static]}\\ \\mathrm{function}\\ \\mathrm{ID}([formal[,\\ formal]^*])\\ \\mathrm{[returns}\\ (\\mathrm{TYPE]})\\ \\{\\ [stmt]^*\\ \\mathrm{[return}\\ expr;]\\ \\}\\\\\n"
"stmt &::= \\mathrm{TYPE}\\ \\mathrm{ID} = expr;\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}\\ \\mathrm{ID} = \\mathrm{new}\\ \\mathrm{ID}(expr^*);\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID} = expr;\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{require}(expr);\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{exit}(expr);\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{if}\\ (expr)\\ stmt\\ [\\mathrm{else}\\ stmt]\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{loop}\\ (intConst)\\ stmt\\\\\n"
"        &\\ \\ \\ |\\ \\ \\{\\ [stmt]^*\\ \\}\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{CODESEPARATOR}\\\\\n"
"expr &::= \\mathsf{UnaryOp}\\ expr\\\\\n"
"        &\\ \\ \\ |\\ \\ expr\\ \\mathsf{BinaryOp}\\ expr\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}(expr[,\\ expr]^*)\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}.\\mathrm{ID}\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}.\\mathrm{ID}(expr[,\\ expr]^*)\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}\\mathbf{[}expr:expr\\mathbf{]}\\\\\n"
"        &\\ \\ \\ |\\ \\ (expr)\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}\\\\\n"
"        &\\ \\ \\ |\\ \\ boolConst \\\\\n"
"        &\\ \\ \\ |\\ \\ intConst \\\\\n"
"        &\\ \\ \\ |\\ \\ bytesConst \\\\\n"
"\\end{align*}"
msgstr ""
"\\begin{align*}\n"
"program &::= [importDirective]^*\\ [contract]^+\\\\\n"
"importDirective &::= \\mathrm{import}\\ \"\\mathrm{ID}\";\\\\\n"
"contract &::= \\mathrm{contract}\\ \\mathrm{ID}\\ \\{\\ [var]^*\\ [constructor]\\ [function]^+\\ \\}\\\\\n"
"var &::= formal;\\\\\n"
"formal &::= \\mathrm{TYPE}\\ \\mathrm{ID}\\\\\n"
"constructor &::= \\mathrm{constructor}([formal[,\\ formal]^*])\\ \\{\\ [stmt]^*\\ \\}\\\\\n"
"function &::= \\mathrm{[public|static]}\\ \\mathrm{function}\\ \\mathrm{ID}([formal[,\\ formal]^*])\\ \\mathrm{[returns}\\ (\\mathrm{TYPE]})\\ \\{\\ [stmt]^*\\ \\mathrm{[return}\\ expr;]\\ \\}\\\\\n"
"stmt &::= \\mathrm{TYPE}\\ \\mathrm{ID} = expr;\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}\\ \\mathrm{ID} = \\mathrm{new}\\ \\mathrm{ID}(expr^*);\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID} = expr;\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{require}(expr);\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{exit}(expr);\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{if}\\ (expr)\\ stmt\\ [\\mathrm{else}\\ stmt]\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{loop}\\ (intConst)\\ stmt\\\\\n"
"        &\\ \\ \\ |\\ \\ \\{\\ [stmt]^*\\ \\}\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{CODESEPARATOR}\\\\\n"
"expr &::= \\mathsf{UnaryOp}\\ expr\\\\\n"
"        &\\ \\ \\ |\\ \\ expr\\ \\mathsf{BinaryOp}\\ expr\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}(expr[,\\ expr]^*)\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}.\\mathrm{ID}\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}.\\mathrm{ID}(expr[,\\ expr]^*)\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}\\mathbf{[}expr:expr\\mathbf{]}\\\\\n"
"        &\\ \\ \\ |\\ \\ (expr)\\\\\n"
"        &\\ \\ \\ |\\ \\ \\mathrm{ID}\\\\\n"
"        &\\ \\ \\ |\\ \\ boolConst \\\\\n"
"        &\\ \\ \\ |\\ \\ intConst \\\\\n"
"        &\\ \\ \\ |\\ \\ bytesConst \\\\\n"
"\\end{align*}"

#: ../../syntax.rst:39 df8a281c28d6486ab4e19686f36a4ddc
msgid ""
"Most of the syntax is self explanatory. Syntax unique to sCrypt will be "
"covered later."
msgstr "大部分语法含义都是显而易见的。sCrypt特有的语法会在后面介绍。"

#: ../../syntax.rst:41 726d1a0b1f2d4aceb10aac5b107b9792
msgid ""
"Line comment starts with ``//`` and block comment comes between ``/*`` and "
"``*/``."
msgstr "行注释以 ``//`` 开头，块注释位于 ``/*`` 和 ``*/`` 之间。"

#: ../../syntax.rst:44 5eb91271848145a898005e2f58ad76fd
msgid "Types"
msgstr "类型"

#: ../../syntax.rst:46 d5bec55da0ee4b6a8a772322cf600df3
msgid "Basic Types"
msgstr "基本类型"

#: ../../syntax.rst:48 042f2d11a3534ed68bfc95d782f4781f
msgid "**bool** - a boolean value ``true`` or ``false``."
msgstr "**bool** - 布尔值 ``true`` 或 ``false``。"

#: ../../syntax.rst:49 ed755d0c2d94461faa2af57b09e5f551
msgid ""
"**int** - a signed integer of arbitrary length, whose literals are in "
"decimal or hexadecimal format."
msgstr "**int** - 任意长度的有符号整数，字面量（literals）有十进制和十六进制两种格式。"

#: ../../syntax.rst:58 aece8e4a2a234ab7b4e9b29cdaea5308
msgid ""
"**bytes** - a variable length array of bytes, whose literals are either in "
"quoted hexadecimal format prefixed by ``b``, or double quoted UTF8 string."
msgstr "**bytes** - 一个可变长度的字节数组，其字面量是带引号的十六进制格式，前缀为 ``b``，或双引号 UTF8 字符串。"

#: ../../syntax.rst:68 05c70ee6230145d9a58b7f8e475d1478
msgid "Array Types"
msgstr "数组类型"

#: ../../syntax.rst:69 31f917f9f3c04f63867ab19ba87a99ea
msgid "An array is a fixed-size list of values of the same basic type."
msgstr "数组是长度固定的，具有相同基本类型的值列表。"

#: ../../syntax.rst:71 070bb673d6f24faf81c81bc6e09c300d
msgid ""
"**Array Literals** - a comma-separated list of expressions, enclosed in "
"square brackets. Array size must be an integer constant greater than zero."
msgstr "**数组常量** - 以逗号分隔的表达式列表，括在方括号中。数组大小必须是大于零的整数常量。"

#: ../../syntax.rst:83 fdc47c1d29e846f282101fb1fead9a26
msgid ""
"**Initialize/set an array to the same value** - Function ``T[size] repeat(T "
"e, static const int size)`` returns an array with all ``size`` elements set "
"to ``e``, where T can be any type. Note ``size`` must be a :ref:`compile "
"time constant<ctc-label>`."
msgstr ""
"**将数组初始化/设置为相同值** - 函数 ``T[size] repeat(T e, static const int size)`` "
"返回一个数组，其中所有 ``size`` 元素都设置为 ``e`` ，其中 ``T`` 可以是任何类型。注意 ``size`` 必须是 "
":ref:`编译时常量 <ctc-label>`。"

#: ../../syntax.rst:98 1e4b57814c3f4eea9417f2b3a4bd7c01
msgid ""
"**Index Operator** - index starting from 0. Out of bound access fails "
"contract execution immediately."
msgstr "**索引运算符** - 索引从 ``0`` 开始。越界访问立即使合约执行失败。"

#: ../../syntax.rst:120 d81cfdbc63304e3eb42539ea2f7bc95a
msgid "Struct Types"
msgstr "结构体"

#: ../../syntax.rst:121 f56acd9c968a49759893e82dbda4700e
msgid ""
"A struct (or structure) is a collection of variables (can be of different "
"basic types) under a single name."
msgstr "结构体是单个名称下的变量的集合。变量可以是不同的基本类型、数组或结构体 "

#: ../../syntax.rst:123 c6f2954d9f9b47f086912e952275786b
msgid "**Define Struct**"
msgstr "**定义结构体**"

#: ../../syntax.rst:149 7feb35e909464f4097da2ccf4edf1e78
msgid "**Use Struct**"
msgstr "**使用结构体**"

#: ../../syntax.rst:152 72ce92aeb6204a349a0549a8784231a6
msgid "Type Inference"
msgstr "类型推断"

#: ../../syntax.rst:153 fdb9b9baa5d4473f8a66f8b677929cd7
msgid ""
"The ``auto`` keyword specifies that the type of the variable, of basic type,"
" declared will be automatically deducted from its initializer."
msgstr "``auto`` 关键字表示变量的类型由变量的初始值自动推导出来。"

#: ../../syntax.rst:161 4289d18d006a4c588f7b17ecbea5b9f7
msgid "Type Aliases"
msgstr "类型别名"

#: ../../syntax.rst:162 9816a0d28b7f4db18a3b93bcdd30d625
msgid ""
"Type aliases create a new name for a type. It does not actually create a new"
" type, it merely creates a new name to refer to that type. Note the right "
"side of the declaration should not be an unspecified generic struct type."
msgstr ""
"类型别名为类型创建一个新名称。它实际上并没有创建一个新类型，它只是创建一个新名称来引用该类型。请注意，声明的右侧不能是未指定的泛型结构类型。"

#: ../../syntax.rst:173 75b69c6fbca7475b835db38a0d693e81
msgid "Generics/Generic Types"
msgstr "泛型/泛型类型"

#: ../../syntax.rst:174 8017212f4d154e6ba1fd99901e7ff35a
msgid ""
"A generic type is a parameterized type. It allows a library / struct to work"
" over a variety of types rather than a single one. Users can consume these "
"libraries / structs and use their own concrete types."
msgstr "泛型类型是参数化类型。它允许库/结构体处理多种类型而不是单一类型。用户可以创建这些库/结构体并使用他们自己的具体类型。"

#: ../../syntax.rst:177 7902624f72bd48599dadb558f227f8bd
msgid "**Declare Generic Types**"
msgstr "**声明泛型类型**"

#: ../../syntax.rst:179 7ad885c91af446f8b635e07ddb0e97f0
msgid ""
"Generic types can be declared at library level and used within the library's"
" scope, or struct level and used inside."
msgstr "泛型类型可以在库级别声明并在库的范围内使用，也可以在结构级别声明并在内部使用。"

#: ../../syntax.rst:199 2426f05e8de34f1599a5f9865ccdfe85
msgid "**Instantiate Generic Types**"
msgstr "**实例化泛型类型**"

#: ../../syntax.rst:211 ca462085dc654549ab57de4c7d4688ac
msgid "Domain Subtypes"
msgstr "子类型"

#: ../../syntax.rst:212 d74b9519e5974c97b9b17c6bf4b695b9
msgid ""
"There are several subtypes, specific to the Bitcoin context, used to further"
" improve type safety."
msgstr "有几个特定于比特币上下文的子类型，用于进一步提高类型安全性。"

#: ../../syntax.rst:215 7f1d38b8fdb14aba93a37618733c9bea
msgid "Subtypes of ``bytes``"
msgstr "``bytes`` 的子类型"

#: ../../syntax.rst:216 df998696af184d1f9768db71b5cbbf8d
msgid ""
"To cast a supertype ``bytes`` to them, a function of the type name must be "
"explicitly called."
msgstr "要把 ``bytes`` 类型强制转换成某个子类型，必须显式调用与该子类型同名的函数。"

#: ../../syntax.rst:218 dfe67310325249219151601f0fd3eb42
msgid "**PubKey** - a public key type."
msgstr "**PubKey** - 一种公钥类型。"

#: ../../syntax.rst:224 db246961c002445ba9d5857308d3a467
msgid ""
"**Sig** - a signature type in `DER <https://docs.moneybutton.com/docs/bsv-"
"signature.html>`_ format, including `signature hash type "
"<https://github.com/libbitcoin/libbitcoin-system/wiki/Sighash-and-TX-"
"Signing>`_, which is ``SIGHASH_ALL | SIGHASH_FORKID`` (``0x41``) in the "
"below example."
msgstr ""
"**Sig** - `DER <https://docs.moneybutton.com/docs/bsv-signature.html>`_ "
"格式的签名类型。包含  `签名哈希类型 <https://github.com/libbitcoin/libbitcoin-"
"system/wiki/Sighash-and-TX-Signing>`_，如下例子中的签名哈希类型是 ``SIGHASH_ALL | "
"SIGHASH_FORKID`` (``0x41``) 。"

#: ../../syntax.rst:230 2a03828847324884b7b12bc57746733e
msgid "**Ripemd160** - a RIPEMD-160 hash type."
msgstr "**Ripemd160** - RIPEMD-160 哈希类型。"

#: ../../syntax.rst:236 20f8c38b38ac4edb8e13d017bb0815e6
msgid ""
"**PubKeyHash** - an alias for `Ripemd160`` type. Usually represent a bitcoin"
" address."
msgstr "**PubKeyHash** - `Ripemd160` 类型的别名。通常代表一个比特币地址。"

#: ../../syntax.rst:242 25bc6b4b6c3446fb8376136b6015ec3d
msgid "**Sha1** - a SHA-1 hash type."
msgstr "**Sha1** - SHA-1 哈希类型。"

#: ../../syntax.rst:248 fb4765ce37af4ab18c6baf1788800da6
msgid "**Sha256** - a SHA-256 hash type."
msgstr "**Sha256** - SHA-256 哈希类型。"

#: ../../syntax.rst:254 970d3dd9face4f3aa56edc7d69434444
msgid "**SigHashType** - a sighash type."
msgstr "**SigHashType** - 签名哈希类型。"

#: ../../syntax.rst:261 b5743de5bd7e4684825b7a3143cdae65
msgid "**SigHashPreimage** - a sighash preimage type."
msgstr "**SigHashPreimage** - sighash 原像类型。"

#: ../../syntax.rst:267 09468d8b1202429b91b68cbe85a59d43
msgid "**OpCodeType** - a OpCode type."
msgstr "**OpCodeType** - 操作码类型。"

#: ../../syntax.rst:274 4c2379699c4d4b7fa81fb9c31587b709
msgid "Subtypes of ``int``"
msgstr "``int`` 的子类型"

#: ../../syntax.rst:276 df5b2e05dd934732bccd8ec1821518f1
msgid "**PrivKey** - a private key type."
msgstr "**PrivKey** - 私钥类型。"

#: ../../syntax.rst:284 533e4edcc95d4ce18b5c1928d2bd0f22
msgid "``const`` Variables"
msgstr "``const`` 变量"

#: ../../syntax.rst:285 36426295768242b5804c7db14c39beba
msgid "Variables declared const cannot be changed once initialized."
msgstr "声明为 ``const`` 的变量一旦初始化就不能更改。"

#: ../../syntax.rst:308 a25c9e9c35744f278b1d540564407a36
msgid "``if`` statement"
msgstr "``if`` 语句"

#: ../../syntax.rst:309 51c93342e86f43ee95907f322147b6c4
msgid ""
"``if`` condition can be of type ``int`` and ``bytes``, besides ``bool``. "
"They are implicitly converted to ``bool`` as in C and Javascript. An ``int``"
" expression is evaluated to ``false`` if and only if it is ``0`` (including "
"negative ``0``). A ``bytes`` expression is evaluated to ``false`` if and "
"only if every of its byte is ``b'00'`` (including empty ``bytes`` ``b''``)."
msgstr ""
"``if`` 条件可以是 ``int`` 和 ``bytes`` 类型，除了 ``bool`` 。它们像在 C 和 Javascript "
"中一样被隐式转换为 ``bool``。 ``int`` 表达式被评估为 ``false`` 当且仅当它为 ``0`` （包括负数 ``0``）。 "
"``bytes`` 表达式被评估为 ``false`` 当且仅当它的每个字节都是 ``b'00'`` （包括空的 ``bytes``  "
"``b''``）。"

#: ../../syntax.rst:329 6dd72abb505f44a2b817386de7bb48ff
msgid "exit()"
msgstr "``exit()`` 语句"

#: ../../syntax.rst:330 076d637f3b244926ab151129235ca137
msgid ""
"``exit(bool status);`` statement terminates contract execution. If "
"``status`` is ``true``, contract succeeds; otherwise, it fails."
msgstr ""
"``exit(bool status);`` 语句终止合约执行。如果 ``status`` 为 ``true`` ，则合约执行成功；否则合约执行失败。"

#: ../../syntax.rst:351 d0169630571343dc8c2e2c934fb8a035
msgid "Code Separator"
msgstr "Code Separator 代码分隔符"

#: ../../syntax.rst:352 42fee15d68844012b4524f7b0bb0dbae
msgid ""
"Three or more ``*`` in a line inserts an `OP_CODESEPARATOR "
"<https://en.bitcoin.it/wiki/OP_CHECKSIG#How_it_works>`_. It is used to "
"exclude what comes before (and including itself) it from being part of the "
"signature. Note there is no ``;`` at the end."
msgstr ""
"一行中三个或更多 ``*`` 表示插入一个 `OP_CODESEPARATOR "
"<https://en.bitcoin.it/wiki/OP_CHECKSIG#How_it_works>`_。它用于将其之前的内容（包括其自身）排除在签名的一部分之外。注意末尾没有"
" ``;``。"

#: ../../syntax.rst:371 6ffee1d27f694052a085e75b9b8acaea
msgid "Access Modifiers"
msgstr "访问修饰符"

#: ../../syntax.rst:372 b8b76833b9284acdbf50b490e512a44d
msgid ""
"There are three types of access modifiers available to help restrict the "
"scope of properties and functions of a contract:"
msgstr "可以使用三种类型的访问修饰符来帮助限制合约的属性和函数的范围："

#: ../../syntax.rst:374 8416783300304cb6a1ac7092c83c93f7
msgid "Default: no keyword required"
msgstr "默认：不需要关键字"

#: ../../syntax.rst:375 70df2924c68b43b8b968c714b33a5de7
msgid "Private"
msgstr "私有的"

#: ../../syntax.rst:376 2b7c07ee61204503bcf66164ba508c1a
msgid "Public: only applies to functions"
msgstr "公共：仅适用于函数"

#: ../../syntax.rst:378 8bf0a5eb9cec435dbf8b6ed83bd8f84c
msgid ""
"Only public functions can be called externally by Bitcoin transactions."
msgstr "比特币交易只能从外部调用公共函数。"

#: ../../syntax.rst:385 c69a05bc66824220ad477380f3cceb91
msgid "default"
msgstr "default"

#: ../../syntax.rst:386 b4f96e821eb64c29a8fc4b23945528cf
msgid "private"
msgstr "private"

#: ../../syntax.rst:387 015cbccd82af4a61bff396d916e391bf
msgid "public"
msgstr "public"

#: ../../syntax.rst:389 2f54f42d09b0405680e095f47548b122
msgid "Same contract"
msgstr "合约内"

#: ../../syntax.rst:390 ../../syntax.rst:391 ../../syntax.rst:392
#: ../../syntax.rst:395 ../../syntax.rst:397 ../../syntax.rst:402
#: eda537db408a47398612b88b0bc6e0a2 55f4abc9c5ac462eb46638e5669df8db
#: ac654a6f4ae545fcbed837508dc08506 3e89927a0b4940138300ef020d7a18d7
#: f97e19b8a20c47ceaa0f37be3317ee4d dc24b5ff1aa641d59fa2d36408f92b8b
msgid "Yes"
msgstr "Yes"

#: ../../syntax.rst:394 56a94bbcc39d4918af7ddeaab54fdc4e
msgid "Other contract"
msgstr "其他合约"

#: ../../syntax.rst:396 ../../syntax.rst:400 ../../syntax.rst:401
#: 19560af8d92a4a38800b7ce116a684fe 3c0e111fe59a42d0bc160ce842925242
#: cf198fe2b8234e3f9fcccbfe53a513a6
msgid "No"
msgstr "No"

#: ../../syntax.rst:399 91d44743b5ad41039fa65bdbf28a4164
msgid "Externally"
msgstr "外部"

#: ../../syntax.rst:405 648c92aab48346acb7102d44214bc7ff
msgid "Operators"
msgstr "运算符"

#: ../../syntax.rst:413 64be872c3cf648d993e684fc1d1b8570
msgid "Precedence"
msgstr "优先级"

#: ../../syntax.rst:414 11e2b49f96b5442bac1f5c8926116fc4
msgid "Operator"
msgstr "运算符"

#: ../../syntax.rst:415 97017d513be745e79222c985e55a975d
msgid "Associativity"
msgstr "关联性"

#: ../../syntax.rst:416 46cf18ebced34c8996e91528bb9ff4d2
msgid "Note"
msgstr "注意"

#: ../../syntax.rst:418 f1c7fc7fd5ef45feab756dafc6a5c707
msgid "1"
msgstr "1"

#: ../../syntax.rst:419 4c5bcfb605e248a9b4b2e9c0c8a45edd
msgid "``() ++ -- .``"
msgstr "``() ++ -- .``"

#: ../../syntax.rst:420 ../../syntax.rst:424 ../../syntax.rst:433
#: ../../syntax.rst:438 ../../syntax.rst:443 ../../syntax.rst:448
#: ../../syntax.rst:453 ../../syntax.rst:458 ../../syntax.rst:463
#: ../../syntax.rst:468 ../../syntax.rst:473 ../../syntax.rst:478
#: ca5e1c9a9441423f8ef911fd55a563b7 680502f83ff749d49b9037b778ad8891
#: 267a03592e5643dabbbf902644a40817 f70ae0d509e444cdaeb9495d539e200f
#: fdce8fcd0fed483289663730a2cc4a1c 2839376d62a5436bb754a250407a6eba
#: 2839376d62a5436bb754a250407a6eba 2839376d62a5436bb754a250407a6eba
#: 2839376d62a5436bb754a250407a6eba 2839376d62a5436bb754a250407a6eba
#: 2839376d62a5436bb754a250407a6eba 2839376d62a5436bb754a250407a6eba
msgid "left"
msgstr "左"

#: ../../syntax.rst:422 f26df0bec68641d59acccf2309ed05e3
msgid "2"
msgstr "2"

#: ../../syntax.rst:423 8c2df8e61bf3440cbe32cf035ca5b56b
msgid "``[]``"
msgstr "``[]``"

#: ../../syntax.rst:426 9e311c7d849d40d7badcb7c76c39d22d
msgid "3"
msgstr "3"

#: ../../syntax.rst:427 4c5bcfb605e248a9b4b2e9c0c8a45edd
msgid "``++ -- - ! ~``"
msgstr "``++ -- - ! ~``"

#: ../../syntax.rst:428 ../../syntax.rst:483 ../../syntax.rst:488
#: 72bf4e37a229459bb04c0c3ae7185798 154f474cb7b341e9bf6232243c2dca3c
#: 154f474cb7b341e9bf6232243c2dca3c
msgid "right"
msgstr "右"

#: ../../syntax.rst:431 105343fb764e41aca324cb1640ffa47e
msgid "4"
msgstr "4"

#: ../../syntax.rst:432 5e02f16a694e4468be3b959bb1c2ea3c
msgid "``* / %``"
msgstr "``* / %``"

#: ../../syntax.rst:436 8f47e2572a81494d90702e16e421c765
msgid "5"
msgstr "5"

#: ../../syntax.rst:437 5d5d90ba694a48b394495e49f47f598d
msgid "``+ -``"
msgstr "``+ -``"

#: ../../syntax.rst:441 2beb328570d240bd815481f8a822d390
msgid "6"
msgstr "6"

#: ../../syntax.rst:442 4c5bcfb605e248a9b4b2e9c0c8a45edd
msgid "``<< >>``"
msgstr "``<< >>``"

#: ../../syntax.rst:444 8817a40668714872a456434cd3b4bc7d
msgid ""
"The number of bits to shift must be non-negative, otherwise evaluation fails"
" immediately"
msgstr "要移位的位数必须为非负数，否则立即失败"

#: ../../syntax.rst:446 a60ca8ba2aac492d8879500592ed5c25
msgid "7"
msgstr "7"

#: ../../syntax.rst:447 4c5bcfb605e248a9b4b2e9c0c8a45edd
msgid "``< <= > >=``"
msgstr "``< <= > >=``"

#: ../../syntax.rst:451 f5f4e5257868440f9df7a5293ebfb2af
msgid "8"
msgstr "8"

#: ../../syntax.rst:452 4039cf87541a4395885c6a28338c4907
msgid "``== !=``"
msgstr "``== !=``"

#: ../../syntax.rst:456 7122a7b2440c44b698a2a88747a82db9
msgid "9"
msgstr "9"

#: ../../syntax.rst:457 8c2df8e61bf3440cbe32cf035ca5b56b
msgid "``&``"
msgstr "``&``"

#: ../../syntax.rst:459 daab034b3a6b42d89bb9b741944a2156
msgid ""
"In the case of two integers with different length, the shorter one with be "
"expanded first to be the same legnth with the longer one using `num2bin`"
msgstr "在两个长度不同的整数的情况下，较短的首先使用 `num2bin` 扩展为与较长的相同的长度"

#: ../../syntax.rst:461 f9039c91da6b4e9e9db7238a3fa134b5
msgid "10"
msgstr "10"

#: ../../syntax.rst:462 8c2df8e61bf3440cbe32cf035ca5b56b
msgid "``^``"
msgstr "``^``"

#: ../../syntax.rst:464 ../../syntax.rst:469 c6a9adbbb5c345e6906ad66c374e468c
#: c6a9adbbb5c345e6906ad66c374e468c
msgid "Same as ``&``"
msgstr "与 ``&`` 相同"

#: ../../syntax.rst:466 4b096ff891ff430cbff043335e551c22
msgid "11"
msgstr "11"

#: ../../syntax.rst:467 5b2d8cf76bd048109498c803599be803
msgid "``|``"
msgstr "``|``"

#: ../../syntax.rst:471 ca862acdda7044f48f4843f474b0c03b
msgid "12"
msgstr "12"

#: ../../syntax.rst:472 8c2df8e61bf3440cbe32cf035ca5b56b
msgid "``&&``"
msgstr "``&&``"

#: ../../syntax.rst:476 fb3462e167d248ffabf46f23c7d8125c
msgid "13"
msgstr "13"

#: ../../syntax.rst:477 5b2d8cf76bd048109498c803599be803
msgid "``||``"
msgstr "``||``"

#: ../../syntax.rst:481 f9039c91da6b4e9e9db7238a3fa134b5
msgid "14"
msgstr "14"

#: ../../syntax.rst:482 154177e931fa4a56880f0ae0caef30b2
msgid "``? :``"
msgstr "``? :``"

#: ../../syntax.rst:486 f9039c91da6b4e9e9db7238a3fa134b5
msgid "15"
msgstr "15"

#: ../../syntax.rst:487 7ba02214a5f4401880764836529723ee
msgid "``+= -= *= /= %= &= |= ^= <<= >>=``"
msgstr "``+= -= *= /= %= &= |= ^= <<= >>=``"

#: ../../syntax.rst:492 6cf9eaa66b134fd9aa5b4e448d6b3806
msgid ""
"Operator ``&&``, ``||``, and ``? :`` use `short-circuit evaluation "
"<https://en.wikipedia.org/wiki/Short-circuit_evaluation>`_."
msgstr ""
"运算符 ``&&``、``||`` 和 ``? :`` 使用 `短路评估 <https://en.wikipedia.org/wiki/Short-"
"circuit_evaluation>`_."

#: ../../syntax.rst:493 732c76ed414d4c12a8cfcb9bf80e1567
msgid ""
"After performing bitwise on integers, such as operator ``&``, ``|``, ``^``, "
"and ``~``, the compiler uses ``OP_BIN2NUM`` to compress the results."
msgstr ""
"在对整数执行按位运算后，例如运算符 ``&``、``|``、``^`` 和 ``~``，编译器使用 ``OP_BIN2NUM`` 压缩运算结果。"

#: ../../syntax.rst:496 400e39f0effb4b5a9f38acafe4ffa2bc
msgid "Scoping"
msgstr "作用域"

#: ../../syntax.rst:497 24e050d51c3043078aa8acb378342133
msgid ""
"Scoping in sCrypt follows the prevailing scoping rules of C99 and Solidity. "
"Outer scope variable is shadowed by the inner scope variable of the same "
"name."
msgstr "sCrypt的作用域遵循C99和Solidity的现行作用域规则。外部作用域的变量会被内部作用域的同名变量覆盖。"
